JSON
 4. Создать внешний репозиторий c названием JSON. - 
    github.com  ->  repositories  ->  new  ->  Repository name <JSON> + Public + Add a README file  ->  Create repository
 5. Клонировать репозиторий JSON на локальный компьютер. - 
    git clone <ссылка на копируемый репозиторий с GitHub (Shift+Insert)>
 6. Внутри локального JSON создать файл “new.json”. - 
    cd JSON  ->  touch new.json
 7. Добавить файл под гит. - 
    git add new.json
 8. Закоммитить файл. - 
    git commit -m "created new.json"
 9. Отправить файл на внешний GitHub репозиторий. - 
    git push
 10. Отредактировать содержание файла “new.json” - 
    написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате JSON. - vim new.json 
 11. Отправить изменения на внешний репозиторий. - 
    git commit -am "changed new.json"  ->  git push
 12. Создать файл preferences.json - 
    touch preferences.json
 13. В файл preferences.json добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате JSON. - 
    vim preferences.json
 14. Создать файл sklls.json добавить информацию о скиллах которые будут изучены на курсе в формате JSON - 
    touch skills.json
 15. Отправить сразу 2 файла на внешний репозиторий. - 
    git add .  ->  git commit -m "created preferences.json skills.json"  ->  git push
 16. На веб интерфейсе создать файл bug_report.json. - 
    github.com  ->  repositories  ->  JSON  ->  Add file  ->  Create new file  ->  bug_report.json  ->  Commit new file 
 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе. - 
    github.com  ->  repositories  ->  JSON  ->  bug_report.json  ->  Edit this file  ->  Commit changes
 18. На веб интерфейсе модифицировать файл bug_report.json, добавить баг репорт в формате JSON. - 
    github.com  ->  repositories  ->  JSON  ->  bug_report.json  ->  Edit this file  ->  <Написать баг репорт>
 19. Сделать Commit changes (сохранить) изменения на веб интерфейсе. - 
    Commit changes
 20. Синхронизировать внешний и локальный репозиторий JSON - 
    git pull 


XML
 21. Создать внешний репозиторий c названием XML. - 
    github.com  ->  repositories  ->  new  ->  Repository name <XML> + Public + Add a README file  ->  Create repository
 22. Клонировать репозиторий XML на локальный компьютер. -  
    git clone <ссылка на копируемый репозиторий с GitHub (Shift+Insert)>
 23. Внутри локального XML создать файл “new.xml”. - 
    cd XML  -> touch new.xml
 24. Добавить файл под гит. - 
    git add new.xml
 25. Закоммитить файл. - 
    git commit -m "created new.json"
 26. Отправить файл на внешний GitHub репозиторий. - 
    git push
 27. Отредактировать содержание файла “new.xml” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате XML. - 
    vim new.xml
 28. Отправить изменения на внешний репозиторий. - 
    git commit -am "changed new.xml"  ->  git push
 29. Создать файл preferences.xml - 
    touch preferences.xml
 30. В файл preferences.xml добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате XML. - 
    vim preferences.xml
 31. Создать файл sklls.xml добавить информацию о скиллах которые будут изучены на курсе в формате XML - 
    touch skills.xml
 32. Сделать коммит в одну строку. - 
    git add . && git commit -m "created preferences.xml skills.xml"
 33. Отправить сразу 2 файла на внешний репозиторий. - 
    git push
 34. На веб интерфейсе создать файл bug_report.xml. - 
    github.com  ->  repositories  ->  XML  ->  Add file  ->  Create new file  ->  bug_report.xml  ->  Commit new file
 35. Сделать Commit changes (сохранить) изменения на веб интерфейсе. - 
    github.com  ->  repositories  ->  XML  ->  bug_report.xml  ->  Edit this file  ->  Commit changes
 36. На веб интерфейсе модифицировать файл bug_report.xml, добавить баг репорт в формате XML. - 
    github.com  ->  repositories  ->  XML  ->  bug_report.xml  ->  Edit this file  ->  <Написать баг репорт>
 37. Сделать Commit changes (сохранить) изменения на веб интерфейсе. - 
    Commit changes
 38. Синхронизировать внешний и локальный репозиторий XML. - 
    git pull
TXT
 1. Создать внешний репозиторий c названием TXT. - 
    github.com  ->  repositories  ->  new  ->  Repository name <TXT> + Public + Add a README file  ->  Create repository
 2. Клонировать репозиторий TXT на локальный компьютер. - 
    git clone <ссылка на копируемый репозиторий с GitHub (Shift+Insert)>
 3. Внутри локального TXT создать файл “new.txt”. - 
    cd TXT  ->  touch new.txt
 4. Добавить файл под гит. - 
    git add new.txt
 5. Закоммитить файл. - 
    git commit -m "created new.txt"
 6. Отправить файл на внешний GitHub репозиторий. - 
    git push
 7. Отредактировать содержание файла “new.txt” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате TXT. - 
    vim new.txt
 8. Отправить изменения на внешний репозиторий. - 
    git commit -am "changed new.txt"  ->  git push
 9. Создать файл preferences.txt - 
    touch preferences.txt
 10. В файл preferences.txt” добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате TXT. - 
    vim preferences.txt
 11. Создать файл sklls.txt добавить информацию о скиллах которые будут изучены на курсе в формате TXT - 
    touch skills.txt
 12. Сделать коммит в одну строку. - 
    git add .  &&  git commit -m "created preferences.txt skills.txt"
 13. Отправить сразу 2 файла на внешний репозиторий. - 
    git push
 14. На веб интерфейсе создать файл bug_report.txt. - 
    github.com  ->  repositories  ->  TXT  ->  Add file  ->  Create new file  ->  bug_report.txt  ->  Commit new file
 15. Сделать Commit changes (сохранить) изменения на веб интерфейсе. - 
    github.com  ->  repositories  ->  TXT  ->  bug_report.txt  ->  Edit this file  ->  Commit changes
 16. На веб интерфейсе модифицировать файл bug_report.txt, добавить баг репорт в формате TXT. - 
    github.com  ->  repositories  ->  XML  ->  bug_report.xml  ->  Edit this file  ->  <Написать баг репорт>
 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе. - 
    Commit changes
 18. Синхронизировать внешний и локальный репозиторий TXT. - 
    git pull
